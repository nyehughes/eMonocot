<?xml version="1.0" encoding="UTF-8" ?>
<jsp:root xmlns:jsp="http://java.sun.com/JSP/Page"
	xmlns:spring="http://www.springframework.org/tags"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:em="http://e-monocot.org/portal/functions"
	xmlns:tags="urn:jsptagdir:/WEB-INF/tags"
	xmlns:fn="http://java.sun.com/jsp/jstl/functions" version="2.0">
	<jsp:directive.attribute name="name" type="java.lang.String" required="true" />
	<jsp:directive.attribute name="layer" type="java.lang.String" required="true" />
	<jsp:directive.attribute name="style" type="java.lang.String" required="true" />
	<jsp:directive.attribute name="featureId" type="java.lang.String" required="true" />
	<spring:message code="web.map.server.url" var="wmsUrl"/>	
	var ${name} = new OpenLayers.Layer.WMS("${name}","${wmsUrl}",
		{
			layers : "${layer}",
			transparent : "true",
			format : "image/png",
			tiled: "yes",
			tilesorigin: [map.maxExtent.left, map.maxExtent.bottom]
		},
		{
			isBaseLayer : false,
			displayInLayerSwitcher : false,
			wrapDateLine: true
		}
	);
	
	${name}.params.STYLES = "${style}";
	${name}.params.FEATUREID = "${featureId}";
	map.addLayers([ ${name} ]);
	var wfsUrl =  location.protocol + '//' + location.host + '/geoserver/wfs?' + 
		decodeURIComponent(
			$.param({
				"request": "GetFeature",
				"version": "1.1.0",
				"typeName": "${layer}",
				"outputFormat": "JSON",
				"FEATUREID": "${featureId}"
			})
	);
	

	$.ajax({
		url: wfsUrl,
		beforeSend: function(xhr){
                    if (xhr.overrideMimeType)
                    {
                      xhr.overrideMimeType("application/json");
                    }
        },
        dataType: 'json',
		success: function (result) {
                        jsonObj = new OpenLayers.Format.GeoJSON();
                        jsonObj = jsonObj.read(result);
                        var geomCollection = new OpenLayers.Geometry.Collection();
                        $.each( jsonObj, function( key, value ) {
                                geomCollection.addComponent(value.geometry);
                        });
                        geomCollection.calculateBounds();
                        map.zoomToExtent(geomCollection.bounds);

		},
		
		
		error: function (data) {
			console.log(data);
		}
	});														
	
</jsp:root>
